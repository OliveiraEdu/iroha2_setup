  [package]
  name = "smartcontract"
  version = "0.1.0"
  edition = "2021"

  [lib]
    # A smart contract should be linked dynamically so that it may link to functions exported
    # from the host environment. The host environment executes a smart contract by
    # calling the function that smart contract exports (entry point of execution)
  crate-type = ['cdylib']

  [profile.release]
  strip = "debuginfo" # Remove debugging info from the binary
  panic = "abort"     # Panics are transcribed to Traps when compiling for WASM
  lto = true          # Link-time-optimization produces notable decrease in binary size
  opt-level = "z"     # Optimize for size vs speed with "s"/"z" (removes vectorization)
  codegen-units = 1   # Further reduces binary size but increases compilation time

  [dependencies]
  #iroha_data_model = { git = "https://github.com/hyperledger/iroha.git", branch = "iroha2-dev", rev = "80183323710952a38766dcd6e04a731420df9a42" }
  iroha_data_model = { path = "Cargo.lock" }
  #iroha_smart_contract = { git = "https://github.com/hyperledger/iroha.git", branch = "iroha2-dev", rev = "80183323710952a38766dcd6e04a731420df9a42" }
  iroha_smart_contract = { path = "Cargo.lock" }



  panic-halt = "0.2.0"
